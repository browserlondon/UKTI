/*
* Name: Forms
* Note: N/A
-------------------------------------------------------------- */

// Reset fonts for relevant elements
input,
button,
select,
textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
}


// Normalize non-controls
//
// Restyle and baseline non-control form elements.

fieldset {
    padding: 0;
    margin: 0;
    border: 0;
    // Chrome and Firefox set a `min-width: -webkit-min-content;` on fieldsets,
    // so we reset that to ensure it behaves more like a standard block element.
    // See https://github.com/twbs/bootstrap/issues/12359.
    min-width: 0;
}

legend {
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: $line-height-computed;
    font-size: $font-size-base * 1.5;
    line-height: inherit;
    color: $legend-color;
    border: 0;
    border-bottom: 1px solid $legend-border-color;
}

label {
    display: inline-block;
    margin-bottom: 5px;
    font-weight: bold;
}

// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

input[type="text"], input[type="email"], input[type="search"], input[type="password"], input[type="tel"], select {
    -webkit-appearance: none;
    -moz-appearance: none; /* mobile firefox too! */
}

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] { box-sizing: border-box; }

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
    width: 16px;
    height: 16px;
    margin-top: 6px;
    margin-top: 1px \9;
    /* IE8-9 */
    line-height: normal;
    transition: .25s border ease-in-out, .25s background-color ease-in-out;
    border-color: $brand-primary;
    .gt-ie8 & {
        background-color: transparent;
        -webkit-appearance: none;
        appearance: none;
        border: 2px solid;
        border-radius: 10em;
        &:focus { outline: none; }
        &:hover { cursor: pointer; }
        &:disabled { border: 2px solid $brand-disabled; }
    }
    @include respond-max($screen-sm) {
        width: 1.15em;
        height: 1.15em;
        margin-top: 4px;
    }
}

input[type="checkbox"]:checked {
    background-color: $brand-primary;

}

input[type="radio"]:checked {
    border-width: 5px;
    transition: .25s border ease-in-out;
}

// Set the height of file controls to match text inputs
input[type="file"] {
    display: block;
    -webkit-appearance: none;
    appearance: none;
    &::-webkit-file-upload-button {
        -webkit-appearence: none;
        cursor: pointer;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
        outline: 0;
        border: 0;
        padding-left: 0;
        padding-right: 0.5em;
        background: transparent;
        color: $brand-primary;
    }
}

// Make range inputs behave like textual form controls
input[type="range"] {
    display: block;
    width: 100%;
}

// Special styles for iOS date input
//
// In Mobile Safari, date inputs require a pixel line-height that matches the
// given height of the input.
input[type="date"] { line-height: $input-height-base; }

// Make multiple select elements height not fixed

select[multiple], select[size] { height: auto; }

select { 
    height: 2.65em;
    background-image: url('../images/miscellaneous/dropdown-arrow.svg'); 
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 1em;
    .no-svg & {
        background-image: url('../images/miscellaneous/dropdown-arrow.png');
    }
    .no-bgpositionshorthand & {
        background-position: 98% 50%;
    }
}

// Focus for file, radio, and checkbox

input[type="file"],
input[type="radio"],
input[type="checkbox"] {
    &:focus { outline: 0; }
}

// Adjust output element
output {
    display: block;
    padding-top: $padding-vertical-base + 1;
    font-size: $font-size-base;
    line-height: $line-height-base;
    color: $input-color;
}

.form {
    @include guttering;
    &:last-child { margin-bottom: 0; }
}

// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control, %form-control {
    display: block;
    width: 100%;
    box-shadow: none;
    padding: $padding-vertical-base $padding-horizontal-base $padding-vertical-base/2;
    font-size: $font-size-base;
    line-height: $line-height-base;
    background-color: $input-bg;
    // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 2px solid darken($input-bg, 7.5%);
    border-radius: $input-border-radius;
    transition: border-color ease-in-out .15s;
    color: $brand-text;
    // Customize the `:focus` state to imitate native WebKit styles.
    @include form-control-focus;
    // Placeholder
    @include placeholder;
    @include respond-max($screen-sm) { font-size: $font-size-sm; }
    // Disabled and read-only inputs
    // Note: HTML5 says that controls under a fieldset > legend:first-child won't
    // be disabled if the fieldset is disabled. Due to implementation difficulty,
    // we don't honor that edge case; we style them as disabled anyway.
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        background-color: $input-bg-disabled;
        opacity: 1;
    }

    // Oh IE, you really are shit.
    .ie & { padding-bottom: .45em; }

    .lt-ie9 & { height: 42px; }
}

// Reset height for `textarea`s
textarea.form-control {
    height: auto;
    .lt-ie9 & { height: auto; }
}

//// Checkboxes and radios
////
//// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
    position: relative;
    display: block;
    margin: 5px 0;
    // clear the floating input if there is no label text
    label {
        padding-left: 25px;
        margin-bottom: 0;
        font-weight: normal;
        cursor: pointer;
    }
}

.radio--inline,
.checkbox--inline {
    @include inline-block;
    margin: 0;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
    padding-top: .55em;
    padding-bottom: .55em;
    padding-left: 25px;
    margin-right: $guttering / 2;

    &:last-child { margin-right: 0; }

    .lt-ie9 & { white-space: nowrap; }
}

.radio--small,
.checkbox--small {
    font-size: 85%;
    label {
        padding: 0.25em 0 .25em 20px;
    }
}

.radio input[type="radio"],
.radio--inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox--inline input[type="checkbox"] {
    position: absolute;
    margin-left: -25px;
    .lt-ie9 & { outline: 0; }
}

.radio + .radio,
.checkbox + .checkbox {
    margin-top: -5px;
    // Move up sibling radios or checkboxes for tighter spacing
}

.radio--inline + .radio--inline,
.checkbox--inline + .checkbox--inline {
    margin-top: 0;
}

// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.

@include input-size(".input-sm", $input-height-sm, $padding-vertical-sm, $padding-horizontal-sm, $font-size-sm, $line-height-sm, $border-radius-sm);
@include input-size("%input-sm", $input-height-sm, $padding-vertical-sm, $padding-horizontal-sm, $font-size-sm, $line-height-sm, $border-radius-sm);

@include input-size(".input-lg", $input-height-lg, $padding-vertical-lg, $padding-horizontal-lg, $font-size-lg, $line-height-lg, $border-radius-lg);
@include input-size("%input-lg", $input-height-lg, $padding-vertical-lg, $padding-horizontal-lg, $font-size-lg, $line-height-lg, $border-radius-lg);


// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).
//
// Heads up! This is mixin-ed into `.navbar-form` in navbars.less.

.form-inline {
    // Kick in the inline
    @include respond-min($screen-sm-min) {
        // Inline-block all the things for "inline"
        .form-group {
            display: inline-block;
            margin-bottom: 0;
            vertical-align: middle;
        }
        // In navbar-form, allow folks to *not* use `.form-group`
        .form-control {
            display: inline-block;
            width: auto;
            // Prevent labels from stacking above inputs in `.form-group`
            vertical-align: middle;
        }
        .control-label {
            margin-bottom: 0;
            vertical-align: middle;
        }
        // Remove default margin on radios/checkboxes that were used for stacking, and
        // then undo the floating of radios and checkboxes to match (which also avoids
        // a bug in WebKit: https://github.com/twbs/bootstrap/issues/1969).
        .radio,
        .checkbox {
            display: inline-block;
            margin-top: 0;
            margin-bottom: 0;
            padding-left: 0;
            vertical-align: middle;
        }
        .radio input[type="radio"],
        .checkbox input[type="checkbox"] {
            float: none;
            margin-left: 0;
        }
    }
}

// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.form-horizontal {
    // Consistent vertical alignment of labels, radios, and checkboxes
    .control-label,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline {
        margin-top: 0;
        margin-bottom: 0;
    }
    // Account for padding we're adding to ensure the alignment and of help text
    // and other content below items
    .radio, .checkbox { min-height: 1em; }

    .form-control-static { padding-top: $padding-vertical-base + 1; }
    // Only right align form labels here when the columns stop stacking
    @include respond-min($screen-sm-min) {
        .control-label { text-align: right; }
    }

    // Validation states
    //
    // Reposition the icon because it's now within a grid column and columns have
    // `position: relative;` on them. Also accounts for the grid gutter padding.
    .has-feedback .form-control-feedback {
        top: 0;
        right: $grid-gutter-width / 2;
    }
}

//
// Twine Bootstrap Forms
// --------------------------------------------------

// Normalize non-controls
//

label {
    font-weight: normal;
    &.required, &%required {
        &:after {
            content: '*';
            color: $brand-warning;
            position: absolute;
            padding-left: .25em;
        }
    }
}

.form-control--fake-textarea {
    height: auto;
    min-height: 8em;
}

.form-control--no-resize { resize: none; }

// Get rid of iPhone safari box shadows

input[type="text"],
input[type="email"],
input[type="password"],
textarea {
    -webkit-appearance: none;
    appearance: none;
}

input[type="password"] {
    .lt-ie9 & {
        font-family: Arial;
    }
}

// Reset height for `textarea`s
textarea.form-control {
    resize: vertical;
    overflow: auto;
}

// Special styles for iOS date input
// Form groups

// Checkboxes and radios
.checkbox {
    padding: 0;
    margin-bottom: $guttering;
}

.checkbox__row {
    padding: .5em;
    label {
        display: inline-block;
        margin-bottom: 0;
    }
    input, .checkbox__input {
        margin: .25em 1em .25em .25em;
        display: inline-block;
        float: none;
        vertical-align: bottom;
    }
}

// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.form-support {
    display: block;
    margin-top: 5px;
    margin-bottom: 10px;
    color: $text-muted;
}

// Format .form-support underneath a label
.control-label {
    label + .form-support {
        margin-top: -5px;
        margin-bottom: 0;
    }
}

// Inline forms
// Horizontal forms
.form-horizontal {
    // Consistent vertical alignment of labels, radios, and checkboxes
    .control-label {
        @include respond-max($screen-sm-max) {
            margin-bottom: 5px;
        }
    }

    .radio--inline, .checkbox--inline {
        padding-top: 0;
        padding-bottom: 0;
    }
}
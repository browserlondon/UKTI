/*
* Name: Grid
* Note: N/A
-------------------------------------------------------------- */

// Row
//
// Rows contain and clear the floats of your columns.

.row {
    @include make-row;
    position: relative;
}

.row--vertical-align {
    min-width: 100%;
    display: table;
}

.row--more-pad {
    @include respond-min($screen-md) {
        @include make-row($grid-gutter-width-lg);
        [class*=col] {
            padding-left: $grid-gutter-width-lg / 2;
            padding-right: $grid-gutter-width-lg / 2;
        }       
    }
}


// Columns
//
// Common styles for small and large grid columns

@include make-grid-columns;

// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@include make-grid-columns-float(xs);

@include make-grid(xs);

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@include respond-min($screen-sm-min) {
    @include make-grid-columns-float(sm);
    @include make-grid(sm);
}

// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@include respond-min($screen-md-min) {
    @include make-grid-columns-float(md);
    @include make-grid(md);
}

// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@include respond-min($screen-lg-min) {
    @include make-grid-columns-float(lg);
    @include make-grid(lg);
}

// Extra large grid
//
// Columns, offsets, pushes, and pulls for the extra large desktop device range.

@include respond-min($screen-xl-min) {
    @include make-grid-columns-float(xl);
    @include make-grid(xl);
}

.col {}

.col--no-float { float: none; }

.col--more-pad {
    padding-top: $guttering/2;
    padding-bottom: $guttering/2;
}

.col--zero-pad {
    padding-left: 0;
    padding-right: 0;
}

.col--vertical-align {
    display: table-cell;
    float: none;
    vertical-align: middle;
}